# Non-Mac encoding tables

# $Id: nonmactab.im 4379 2015-11-11 17:10:01Z mskala $

# this file collects various encoding-related tables other than the Mac
# encodings from macenc.c

cwrite <<EOF;
/* GENERATED FILE - EDIT THE SOURCE IN nonmactab.im INSTEAD! */

#include "_stdint.h"

EOF

hwrite <<EOF;
/* GENERATED FILE - EDIT THE SOURCE IN nonmactab.im INSTEAD! */

#include "_stdint.h"

EOF

########################################################################

# TeX base encoding

# This is the native encoding of TeX, made obsolete by LaTeX and other
# macro packages, which define their own encodings.  Some really old
# fonts are presumably still encoded in TeX base encoding.

# Source material is 8r.enc from the TeX distribution (which translates
# encoding numbers into Postscript names) composed with the Adobe Glyph
# List, which translates Postscript names into Unicode.  We distribute
# the AGL and 8r.enc, as well as looking for a local TeX distribution and
# possibly updating our copy of 8r.enc from that.

{ id enc_texbase;
  valtype "int32_t";

  parserx "^/([\.A-Za-z]+)";
  rxparse "dat/texbase.dat" -1 -> 1;

  remap values {
    priority first;
    parserx "^([^;]+);([0-9A-F]+)";
    skiprx "^\s*#";
    rxparse "dat/glyphlist.txt" 1 -> x2;
    ".notdef" -> 0;
  }
}

########################################################################

# Big5 HKSCS

# Source:
#    file Unihan_OtherMappings.txt inside
#    http://unicode.org/Public/UCD/latest/ucd/Unihan.zip

{ id "enc_big5hkscs";
  valtype "int32_t";

  parserx "^U\\+([0-9a-fxA-FX]+)[\t ]+(kBigFive|kHKSCS)[\t ]+([0-9a-fxA-FX]+)"
  rxparse "dat/Unihan_OtherMappings.txt" x3 -> x1;
}

########################################################################

# JIS-0201

# Source:
#    http://unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/JIS/JIS0201.TXT

{ id "enc_jis0201";
  valtype "int32_t";

  0..0xFF -> 0;
  priority last;
  parserx "^([0-9a-fxA-FX]+)[\t ]+([0-9a-fxA-FX]+)"
  rxparse "dat/JIS0201.TXT" x1 -> x2;
}

########################################################################

# JIS-0208

# Source:
#    http://unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/JIS/JIS0208.TXT

{ id "enc_jis0208";
  valtype "int32_t";

  parserx "^([0-9a-fxA-FX]+)[\t ]+([0-9a-fxA-FX]+)[\t ]+([0-9a-fxA-FX]+)"
  rxparse "dat/JIS0208.TXT" x2 -> x3;
}

########################################################################

# KSC 5601

# Source:
#    http://unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/KSC/KSC5601.TXT

{ id "enc_ksc5601";
  valtype "int32_t";

  parserx "^([0-9a-fxA-FX]+)[\t ]+([0-9a-fxA-FX]+)"
  rxparse "dat/KSC5601.TXT" x1 -> x2;
}

########################################################################

# GB-2312

# Source:
#    file Unihan_OtherMappings.txt inside
#    http://unicode.org/Public/UCD/latest/ucd/Unihan.zip
# filtered through a Perl script into gb2313.dat

{ id "enc_gb2312";
  valtype "int32_t";

  parserx "^([0-9a-fxA-FX]+)[\t ]+([0-9a-fxA-FX]+)"
  rxparse "dat/gb2312.dat" x1 -> x2;
}

########################################################################

# Johab

# This is apparently some kind of obsolete Korean encoding.  Windows
# designates it "Code Page 1361," but does not have much actual
# support for it, and there's very little information on the Net.

# Source:
#    http://unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/KSC/JOHAB.TXT

{ id "enc_johab";
  valtype "int32_t";

  parserx "^(0x[89A-Fa-f][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F])[\t ]+([0-9a-fxA-FX]+)"
  rxparse "dat/JOHAB.TXT" x1 -> x2;
}

########################################################################

# encodings for which FontForge code needs tables, but not yet icemapped

# Adobe standard

